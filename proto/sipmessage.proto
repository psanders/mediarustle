/*
 * Copyright (C) 2023 by Fonoster Inc (https://fonoster.com)
 * http://github.com/fonoster/routr
 *
 * This file is part of Routr
 *
 * Licensed under the MIT License (the "License");
 * you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 *    https://opensource.org/licenses/MIT
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
syntax = "proto3";

package fonoster.routr.sipmessage.v2beta1;

option java_multiple_files = true;
option java_package = "io.routr.message";
option java_outer_classname = "SIPMessageProto";
option objc_class_prefix = "SM";

enum ResponseType {
  UNKNOWN = 0;
  TRYING = 1;
  RINGING = 2;
  CALL_IS_BEING_FORWARDED = 3;
  QUEUED = 4;
  SESSION_PROGRESS = 5;
  SUCCESS = 6;
  OK = 7;
  ACCEPTED = 8;
  REDIRECTION = 9;
  MULTIPLE_CHOICES = 10;
  MOVED_PERMANENTLY = 11;
  MOVED_TEMPORARILY = 12;
  USE_PROXY = 13;
  ALTERNATIVE_SERVICE = 14;
  CLIENT_ERROR = 15;
  BAD_REQUEST = 16;
  UNAUTHORIZED = 17;
  PAYMENT_REQUIRED = 18;
  FORBIDDEN = 19;
  NOT_FOUND = 20;
  METHOD_NOT_ALLOWED = 21;
  NOT_ACCEPTABLE = 22;
  PROXY_AUTHENTICATION_REQUIRED = 23;
  REQUEST_TIMEOUT = 24;
  GONE = 25;
  REQUEST_ENTITY_TOO_LARGE = 26;
  REQUEST_URI_TOO_LONG = 27;
  UNSUPPORTED_MEDIA_TYPE = 28;
  UNSUPPORTED_URI_SCHEME = 29;
  BAD_EXTENSION = 30;
  EXTENSION_REQUIRED = 31;
  INTERVAL_TOO_BRIEF = 32;
  TEMPORARILY_UNAVAILABLE = 33;
  CALL_OR_TRANSACTION_DOES_NOT_EXIST = 34;
  LOOP_DETECTED = 35;
  TOO_MANY_HOPS = 36;
  ADDRESS_INCOMPLETE = 37;
  AMBIGUOUS = 38;
  BUSY_HERE = 39;
  REQUEST_TERMINATED = 40;
  NOT_ACCEPTABLE_HERE = 41;
  BAD_EVENT = 42;
  REQUEST_PENDING = 43;
  UNDECIPHERABLE = 44;
  SERVER_ERROR = 45;
  SERVER_INTERNAL_ERROR = 46;
  NOT_IMPLEMENTED = 47;
  BAD_GATEWAY = 48;
  SERVICE_UNAVAILABLE = 49;
  SERVER_TIMEOUT = 50;
  VERSION_NOT_SUPPORTED = 51;
  MESSAGE_TOO_LARGE = 52;
  GLOBAL_ERROR = 53;
  BUSY_EVERYWHERE = 54;
  DECLINE = 55;
  DOES_NOT_EXIST_ANYWHERE = 56;
  SESSION_NOT_ACCEPTABLE = 57;
}

message WWWAuthenticate {
  string realm = 1;
  string domain = 2;
  string scheme = 3;
  string nonce = 4;
  string algorithm = 5;
  string qop = 6;
  string opaque = 7;
  bool stale = 8;
}

message Authorization {
  string realm = 1;
  string scheme = 2;
  string c_nonce = 3;
  string nonce = 4;
  string algorithm = 5;
  string qop = 6;
  string opaque = 7;
  string response = 8;
  string username = 9;
  string uri = 10;
  string method = 11;
  int32 nonce_count = 12;
}

message CallID {
  string call_id = 1;
}

message ContentLength {
  int32 content_length = 1;
}

message Extension {
  string name = 1;
  string value = 2;
}

message Via {
  string host = 1;
  int32 port = 2;
  string branch = 3;
  string transport = 4;
  bool r_port_flag = 5;
  int32 r_port = 6;
  string received = 7;
  string m_addr = 8;
  int32 ttl = 9;
}

message SipURI {
  string user = 1;
  string user_password = 2;
  string host = 3;
  string transport_param = 4;
  string m_addr_param = 5;
  string method_param = 6;
  string user_param = 7;
  int32 ttl_param = 8;
  int32 port = 9;
  bool lr_param = 10;
  bool bnc_param = 11;
  bool secure = 12;
}

message Address {
  SipURI uri = 1;
  string display_name = 2;
  bool wildcard = 3;
}

message MaxForwards {
  int32 max_forwards = 1;
}

message Route {
  Address address = 1;
  map<string, string> parameters = 2;
}

message RecordRoute {
  Address address = 1;
  map<string, string> parameters = 2;
}

message From {
  Address address = 1;
  string tag = 2;
  map<string, string> parameters = 3;
}

message To {
  Address address = 1;
  string tag = 2;
  map<string, string> parameters = 3;
}

message Contact {
  Address address = 1;
  int32 expires = 2;
  float q_value = 3;
}

message Expires {
  int32 expires = 1;
}

message SIPMessage {
  oneof message_type {
    ResponseType response_type = 1;
    SipURI request_uri = 2;
  }
  From from = 3;
  To to = 4;
  Contact contact = 5;
  CallID call_id = 6;
  ContentLength content_length = 7;
  Expires expires = 8;
  WWWAuthenticate www_authenticate = 9;
  MaxForwards max_forwards = 10;
  Authorization authorization = 11;
  repeated Extension extensions = 12;
  repeated Via via = 13;
  repeated Route route = 14;
  repeated RecordRoute record_route = 15;
  string reason_phrase = 16;
  string body = 17;
}
